---
import LanguageSelector from './LanguageSelector.astro';
import LanguageDropdown from './LanguageDropdown.astro';
import { getLocaleFromPath, getPathForLocale } from '../utils/i18n';

interface Props {
  content: {
    inicio: string;
    porQue: string;
    reto: string;
    participantes: string;
    programa: string;
    hackerLog: string;
    impacto: string;
    logistica: string;
    apoyo: string;
    impulsan: string;
    sobre: string;
    contacto: string;
  };
}

const { content } = Astro.props;
const currentPath = Astro.url.pathname;
const currentLocale = getLocaleFromPath(currentPath);
const hackerLogPath = currentLocale === 'es' ? '/hacker-log' : `/${currentLocale}/hacker-log`;
const progressPath = currentLocale === 'es' ? '/progress' : `/${currentLocale}/progress`;
---

<header id="header" class="fixed w-screen z-50 transition-all duration-300 p-5">
  <div class="container mx-auto px-4 md:px-6 py-5 md:py-6">
    <nav class="flex items-center justify-between">
      <a href={currentLocale === 'es' ? '/' : `/${currentLocale}`} class="flex items-center space-x-3">
        <span class="text-2xl md:text-3xl font-bold text-earth-900">Hacker Days</span>
        <span class="text-xl md:text-2xl text-primary-600">2025</span>
      </a>
      
      <!-- Desktop Language Selector Only -->
      <div class="hidden md:flex items-center space-x-4">
        <LanguageDropdown currentPath={currentPath} />
        <a 
          href={progressPath} 
          class="flex items-center space-x-2 px-3 py-2 rounded-md text-sm font-medium text-earth-600 hover:text-primary-600 hover:bg-primary-50 transition-colors border border-transparent hover:border-primary-200"
        >
          <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"></path>
          </svg>
          <span>Progreso</span>
        </a>
        <a 
          href={hackerLogPath} 
          class="flex items-center space-x-2 px-3 py-2 rounded-md text-sm font-medium text-earth-600 hover:text-primary-600 hover:bg-primary-50 transition-colors border border-transparent hover:border-primary-200"
        >
          <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
          </svg>
          <span>{content.hackerLog}</span>
        </a>
      </div>
      
      <!-- Mobile menu button -->
      <button 
        id="mobile-menu-button"
        class="block md:hidden p-2 rounded-md text-earth-700 hover:text-primary-600 hover:bg-primary-50 transition-colors border border-earth-200"
        aria-label="Toggle menu"
      >
        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
        </svg>
      </button>
    </nav>
  </div>
  
  <!-- Mobile Navigation - Fixed position -->
  <div id="mobile-menu" class="md:hidden hidden fixed top-0 left-0 w-screen h-screen bg-white z-50">
    <div class="container mx-auto">
      <div class="flex justify-between items-center py-6 px-6">
        <a href={currentLocale === 'es' ? '/' : `/${currentLocale}`} class="flex items-center space-x-3">
          <span class="text-2xl md:text-3xl font-bold text-earth-900">Hacker Days</span>
          <span class="text-xl md:text-2xl text-primary-600">2025</span>
        </a>
        <button 
          id="mobile-menu-close"
          class="p-2 rounded-md text-earth-700 hover:text-primary-600 hover:bg-primary-50 transition-colors"
          aria-label="Close menu"
        >
          <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
          </svg>
        </button>
      </div>
      
      <div class="flex flex-col space-y-6">
        <a 
          href={progressPath} 
          class="flex items-center space-x-3 px-4 py-4 rounded-lg text-lg font-medium text-earth-600 hover:text-primary-600 hover:bg-primary-50 transition-colors border border-transparent hover:border-primary-200"
        >
          <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"></path>
          </svg>
          <span>Progreso</span>
        </a>
        <a 
          href={hackerLogPath} 
          class="flex items-center space-x-3 px-4 py-4 rounded-lg text-lg font-medium text-earth-600 hover:text-primary-600 hover:bg-primary-50 transition-colors border border-transparent hover:border-primary-200"
        >
          <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
          </svg>
          <span>{content.hackerLog}</span>
        </a>
        
        <div class="border-t border-earth-200 pt-6">
          <p class="text-sm text-earth-600 mb-4 px-4">Idioma / Language</p>
          <div class="flex flex-col space-y-2 px-4">
            <a href={getPathForLocale(currentPath, 'es')} class={`flex items-center space-x-3 py-3 px-3 rounded-lg transition-colors ${
              currentLocale === 'es' 
                ? 'bg-primary-100 text-primary-700 border border-primary-300' 
                : 'text-earth-600 hover:text-primary-600 hover:bg-primary-50'
            }`}>
              <img src="/flags/es.svg" alt="Español flag" class="w-5 h-4 object-cover rounded-sm" />
              <span>Español</span>
            </a>
            <a href={getPathForLocale(currentPath, 'en')} class={`flex items-center space-x-3 py-3 px-3 rounded-lg transition-colors ${
              currentLocale === 'en' 
                ? 'bg-primary-100 text-primary-700 border border-primary-300' 
                : 'text-earth-600 hover:text-primary-600 hover:bg-primary-50'
            }`}>
              <img src="/flags/en.svg" alt="English flag" class="w-5 h-4 object-cover rounded-sm" />
              <span>English</span>
            </a>
            <a href={getPathForLocale(currentPath, 'gl')} class={`flex items-center space-x-3 py-3 px-3 rounded-lg transition-colors ${
              currentLocale === 'gl' 
                ? 'bg-primary-100 text-primary-700 border border-primary-300' 
                : 'text-earth-600 hover:text-primary-600 hover:bg-primary-50'
            }`}>
              <img src="/flags/gl.svg" alt="Galego flag" class="w-5 h-4 object-cover rounded-sm" />
              <span>Galego</span>
            </a>
          </div>
        </div>
      </div>
    </div>
  </div>
</header>

<script>
  // Handle header background change on scroll
  const header = document.getElementById('header');
  
  function updateHeaderBackground() {
    if (header && window.scrollY > 50) {
      header.classList.add('bg-white', 'shadow-md');
    } else if (header) {
      header.classList.remove('bg-white', 'shadow-md');
    }
  }
  
  // Mobile menu toggle
  const mobileMenuButton = document.getElementById('mobile-menu-button');
  const mobileMenu = document.getElementById('mobile-menu');
  const mobileMenuClose = document.getElementById('mobile-menu-close');
  
  if (mobileMenuButton && mobileMenu && mobileMenuClose) {
    mobileMenuButton.addEventListener('click', () => {
      mobileMenu.classList.toggle('hidden');
      // Prevent body scroll when menu is open
      document.body.style.overflow = mobileMenu.classList.contains('hidden') ? 'auto' : 'hidden';
    });

    mobileMenuClose.addEventListener('click', () => {
      mobileMenu.classList.add('hidden');
      document.body.style.overflow = 'auto';
    });
    
    // Close mobile menu when clicking on a link
    const mobileLinks = mobileMenu.querySelectorAll('a');
    mobileLinks.forEach(link => {
      link.addEventListener('click', () => {
        mobileMenu.classList.add('hidden');
        document.body.style.overflow = 'auto';
      });
    });
    
    // Close mobile menu when clicking outside
    mobileMenu.addEventListener('click', (e) => {
      if (e.target === mobileMenu) {
        mobileMenu.classList.add('hidden');
        document.body.style.overflow = 'auto';
      }
    });
  }
  
  // Initial call and event listener
  updateHeaderBackground();
  window.addEventListener('scroll', updateHeaderBackground);
</script>